{"code":{"__map":true,"values":[["1","const {h, html, render} = import(\"./preact.standalone.module.js\");\nconst {stringify, parse} = import(\"./stable-stringify.js\");\n\n(() => {\n    const div = document.createElement(\"div\");\n    div.innerHTML = `\n<div id=\"buttonBox\">\n   <button class=\"menuButton\" id=\"addCodeButton\">code</button>\n   <button class=\"menuButton\" id=\"addRunnerButton\">runner</button>\n   <div class=\"spacer\"></div>\n   <button class=\"menuButton\" id=\"showGraph\">show graph</button>\n   <button class=\"menuButton\" id=\"saveButton\">save</button>\n   <button class=\"menuButton\" id=\"loadButton\">load</button>\n</div>\n<div id=\"pad\"></div>\n<div id=\"overlay\"></div>\n`.trim();\n    const renkon = document.querySelector(\"#renkon\");\n    renkon.querySelector(\"#pad\")?.remove();\n    renkon.querySelector(\"#buttonBox\")?.remove();\n    renkon.querySelector(\"#codemirror-loader\")?.remove();\n\n    renkon.appendChild(div.querySelector(\"#buttonBox\"));\n    renkon.appendChild(div.querySelector(\"#pad\"));\n\n    const script = document.createElement(\"script\");\n    script.id = \"codemirror-loader\"\n    script.type = \"module\";\n    script.innerText = `import {CodeMirror} from \"./renkon-web.js\";\n      window.CodeMirror = CodeMirror;\n    `;\n\n    renkon.appendChild(script);\n\n    const renkonParent = renkon.parentNode;\n    renkonParent.querySelector(\"#overlay\")?.remove();\n    renkonParent.appendChild(div.querySelector(\"#overlay\"));\n})();\n"],["2","    // [id:string]\n    const windows = Behaviors.select(\n        [],\n        loadRequest, (now, data) => {\n            console.log(\"windows loaded\");\n            return data.windows\n        },\n        newWindowRequest, (now, spec) => [...now, `${spec.id}`],\n        remove, (now, removeCommand) => now.filter((e) => e != removeCommand.id),\n    );\n\n    // {map: Map<id, type:\"code\"|\"runner\">\n    const windowTypes = Behaviors.select(\n        {map: new Map()},\n        loadRequest, (now, data) => {\n            console.log(\"windowTypes loaded\");\n            return data.windowTypes;\n        },\n        newWindowRequest, (now, spec) => {\n            now.map.set(`${spec.id}`, spec.type);\n            return {map: now.map};\n        },\n        Events.change(windows), (now, windows) => {\n            const keys = [...now.map.keys()];\n            const news = windows.filter((e) => !keys.includes(e));\n            const olds = keys.filter((e) => !windows.includes(e));\n\n            olds.forEach((id) => now.map.delete(`${id}`));\n            news.forEach((id) => now.map.set(`${id}`, \"code\"));\n            return {map: now.map};\n        }\n    );\n\n    // {id, x: number, y: number, width: number, height: number}\n    const positions = Behaviors.select(\n        {map: new Map()},\n        loadRequest, (now, data) => {\n            console.log(\"positions loaded\");\n            return data.positions\n        },\n        Events.change(windowTypes), (now, types) => {\n            const keys = [...now.map.keys()];\n            const typeKeys = [...types.map.keys()];\n            const news = typeKeys.filter((e) => !keys.includes(e));\n            const olds = keys.filter((e) => !typeKeys.includes(e));\n\n            const newWindow = (id, type) => {\n                return {\n                    id,\n                    x: typeKeys.length * 30,\n                    y: typeKeys.length * 30 + 30,\n                    width: type === \"code\" ? 300 : 800,\n                    height: type === \"code\" ? 200 : 400\n                }\n            };\n            olds.forEach((id) => now.map.delete(`${id}`));\n            news.forEach((id) => now.map.set(`${id}`, newWindow(id, types.map.get(id))));\n            return {map: now.map};\n        },\n        moveOrResize, (now, command) => {\n            if (command.type === \"move\" || command.type === \"resize\") {\n                const v = {...now.map.get(command.id)};\n                if (command.x !== undefined) v.x = command.x;\n                if (command.y !== undefined) v.y = command.y;\n                if (command.width !== undefined) v.width = command.width;\n                if (command.height !== undefined) v.height = command.height;\n                now.map.set(command.id, v);\n                return {map: now.map};\n            }\n            return now\n        },\n    );\n\n    const titles = Behaviors.select(\n        {map: new Map()},\n        loadRequest, (now, loaded) => {\n            console.log(\"titles loaded\");\n            return loaded.titles || {map: new Map()};\n        },\n        Events.change(windows), (now, command) => {\n            const keys = [...now.map.keys()];\n            const news = command.filter((e) => !keys.includes(e));\n            const olds = keys.filter((e) => !command.includes(e));\n\n            olds.forEach((id) => now.map.delete(id));\n            news.forEach((id) => now.map.set(id, {id, state: false, title: \"untitled\"}));\n            return {map: now.map};\n        },\n        titleEditChange, (now, change) => {\n            const {id, state, title} = change;\n            const v = {...now.map.get(id)};\n            if (title) v.title = title;\n            if (state !== undefined) v.state = state;\n            now.map.set(id, v);\n            return {map: now.map};\n        }\n    );\n\n    const codeEditors = Behaviors.select(\n        {map: new Map()},\n        loadRequest, (now, loaded) => {\n            for (let editor of now.map.values()) {\n                editor.dom.remove();\n            }\n            now.map.clear();\n\n            for (let [id, type] of loaded.windowTypes.map) {\n                let elem;\n                if (type === \"code\") {\n                    elem = newEditor(id, loaded.code.get(id));\n                } else {\n                    elem = newRunner(id);\n                }\n                now.map.set(id, elem);\n            }\n            return {map: now.map};\n        },\n        Events.change(windowTypes), (now, types) => {\n            const keys = [...now.map.keys()];\n            const typeKeys = [...types.map.keys()];\n            const news = typeKeys.filter((e) => !keys.includes(e));\n            const olds = keys.filter((e) => !typeKeys.includes(e));\n            olds.forEach((id) => {\n                const editor = now.map.get(id);\n                editor.dom.remove();\n                now.map.delete(id)\n            });\n            news.forEach((id) => {\n                const type = types.map.get(id);\n                now.map.set(id, type === \"code\" ? newEditor(id) : newRunner(id));\n            });\n            return {map: now.map};\n        }\n    );\n\n    const init = Events.once(\"code\");\n\n    const newId = Events.select(\n        0,\n        loadRequest, (now, request) => {\n            const max = Math.max(...request.windows.map((w) => Number.parseInt(w)));\n            return max;\n        },\n        Events.or(addCode, addRunner, init), (now, _type) => now + 1\n    );\n\n    const newWindowRequest = Events.change({id: newId, type: Events.or(addCode, addRunner, init)});\n\n    console.log(\"newId\", newWindowRequest);\n\n    const newEditor = (id, doc) => {\n        const mirror = window.CodeMirror;\n        const editor = new mirror.EditorView({\n            doc: doc || \"hello\",\n            extensions: [\n                mirror.basicSetup,\n                mirror.EditorView.lineWrapping,\n                mirror.EditorView.editorAttributes.of({\"class\": \"editor\"})\n            ],\n        });\n        editor.dom.id = `${id}-editor`;\n        return editor;\n    };\n\n    const newRunner = (id) => {\n        const runnerIframe = document.createElement(\"iframe\");\n        runnerIframe.src = \"window.html\";\n        runnerIframe.classList = \"runnerIframe\";\n        runnerIframe.id = `runner-${id}`;\n        return {dom: runnerIframe};\n    }\n"],["3","    const addCode = Events.listener(\"#addCodeButton\", \"click\", () => \"code\");\n    const addRunner = Events.listener(\"#addRunnerButton\", \"click\", () => \"runner\");\n    const save = Events.listener(\"#saveButton\", \"click\", (evt) => evt);\n    const load = Events.listener(\"#loadButton\", \"click\", (evt) => evt);\n\n    const showGraph = Behaviors.collect(\n        true,\n        Events.listener(\"#showGraph\", \"click\", (evt) => evt),\n        (now, _click) => !now\n    );\n\n    document.querySelector(\"#showGraph\").textContent = showGraph ? \"show graph\" : \"hide graph\";\n\n    const _onRun = ((runRequest, codeEditors) => {\n        const id = runRequest.id;\n        const iframe = codeEditors.map.get(id);\n        const code = [...codeEditors.map.values()]\n            .filter((obj) => obj.state)\n            .map((editor) => editor.state.doc.toString());\n        iframe.dom.contentWindow.postMessage({code: code});\n    })(runRequest, codeEditors);\n\n    const remove = Events.receiver();\n    const titleEditChange = Events.receiver();\n    const runRequest = Events.receiver();\n\n    const padDown = Events.listener(\"#pad\", \"pointerdown\", (evt) => {\n        const strId = evt.target.id;\n        if (!strId) {return;}\n        const id = `${Number.parseInt(strId)}`;\n        let type;\n        if (strId.endsWith(\"-win\")) {\n            type = \"moveDown\";\n        } else if (strId.endsWith(\"-resize\")) {\n            type = \"windowResizeDown\";\n        }\n        if (type) {\n            evt.target.setPointerCapture(evt.pointerId);\n            return {id, target: evt.target, type, x: evt.clientX, y: evt.clientY};\n        }\n    });\n\n    const padUp = Events.listener(\"#pad\", \"pointerup\", (evt) => {\n        evt.target.releasePointerCapture(evt.pointerId);\n        return {type: \"pointerup\", x: evt.clientX, y: evt.clientY};\n    });\n\n    const downOrUpOrResize = Events.or(padDown, padUp, windowResize);\n\n    const _padMove = Events.listener(\"#pad\", \"pointermove\", moveCompute);\n\n    const windowResize = Events.receiver();\n    const moveOrResize = Events.receiver();\n\n    const moveCompute = ((downOrUpOrResize, positions) => {\n        // console.log(\"moveCompute\", downOrUpOrResize, positions);\n        if (downOrUpOrResize.type === \"moveDown\" || downOrUpOrResize.type === \"windowResizeDown\") {\n            const start = positions.map.get(downOrUpOrResize.id);\n            const downPoint = {x: downOrUpOrResize.x, y: downOrUpOrResize.y};\n            const type = downOrUpOrResize.type === \"moveDown\" ? \"move\" : \"resize\";\n            return (move) => {\n                // console.log(\"pointermove\", downOrUpOrResize, start);\n                const diffX = move.clientX - downPoint.x;\n                const diffY = move.clientY - downPoint.y;\n                const result = {id: downOrUpOrResize.id, type};\n                if (type === \"move\") {\n                    result.x = start.x + diffX;\n                    result.y = start.y + diffY;\n                } else {\n                    result.width = start.width + diffX;\n                    result.height = start.height + diffY;\n                }\n                Events.send(moveOrResize, result);\n            }\n        } else if (downOrUpOrResize.type === \"pointerup\") {\n            return null;\n        }\n    })(downOrUpOrResize, positions);\n\n    const inputHandler = (evt) => {\n        if (evt.key === \"Enter\") {\n            evt.preventDefault();\n            evt.stopPropagation();\n            Events.send(titleEditChange, {\n                id: `${Number.parseInt(evt.target.id)}`,\n                title: evt.target.textContent,\n                state: false\n            });\n        }\n    }\n"],["4","    const windowDOM = (id, position, title, codeEditor, type) => {\n        // console.log(\"windowDOM\");\n        return h(\"div\", {\n            key: `${id}`,\n            id: `${id}-win`,\n            \"class\": \"window\",\n            style: {\n                left: `${position.x}px`,\n                top: `${position.y}px`,\n                width: `${position.width}px`,\n                height: `${position.height}px`,\n            },\n            ref: (ref) => {\n                if (ref) {\n                    if (ref !== codeEditor.dom.parentNode) {\n                        ref.appendChild(codeEditor.dom);\n                    }\n                }\n            },\n            onPointerEnter: (evt) => Events.send(hovered, `${Number.parseInt(evt.target.id)}`),\n            onPointerLeave: (_evt) => Events.send(hovered, null)\n        }, [\n            h(\"div\", {\n                id: `${id}-titleBar`,\n                \"class\": \"titleBar\",\n            }, [\n                h(\"div\", {\n                    id: `${id}-runButton`,\n                    \"class\": \"titlebarButton runButton\",\n                    type,\n                    onClick: (evt) => {\n                        //console.log(evt);\n                        Events.send(runRequest, {id: `${Number.parseInt(evt.target.id)}`});\n                    },\n                }),\n                h(\"div\", {\n                    id: `${id}-title`,\n                    \"class\": \"title\",\n                    contentEditable: `${title.state}`,\n                    onKeydown: inputHandler,\n                }, title.title),\n                h(\"div\", {\n                    id: `${id}-edit`,\n                    \"class\": `titlebarButton editButton`,\n                    onClick: (evt) => {\n                        // console.log(evt);\n                        Events.send(titleEditChange, {id: `${Number.parseInt(evt.target.id)}`, state: !title.state});\n                    },\n                }, []),\n                h(\"div\", {\n                    id: `${id}-close`,\n                    \"class\": \"titlebarButton closeButton\",\n                    onClick: (evt) => {\n                        Events.send(remove, {id: `${Number.parseInt(evt.target.id)}`, type: \"remove\"})\n                    }\n                }),\n            ]),\n            h(\"div\", {\n                id: `${id}-resize`,\n                \"class\": \"resizeHandler\",\n            }, [])\n        ])\n    };\n\n    const windowElements = ((windows, positions, titles, codeEditors, windowTypes) => {\n        return h(\"div\", {\"class\": \"owner\"}, windows.map((id) => {\n            return windowDOM(id, positions.map.get(id), titles.map.get(id), codeEditors.map.get(id), windowTypes.map.get(id));\n        }));\n    })(windows, positions, titles, codeEditors, windowTypes);\n\n    const _windowRender = render(windowElements, document.querySelector(\"#pad\"));\n"],["5","    const loadRequest = Events.receiver();\n\n    const _saver = ((windows, positions, titles, codeEditors, windowTypes) => {\n        const code = new Map([...codeEditors.map].filter(([_id, editor]) => editor.state).map(([id, editor]) => ([id, editor.state.doc.toString()])));\n        const data = stringify({\n            version: 1,\n            windows,\n            positions,\n            titles,\n            code,\n            windowTypes\n        });\n\n        const div = document.createElement(\"a\");\n        const dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(data);\n        div.setAttribute(\"href\", dataStr);\n        div.setAttribute(\"download\", `renkon-pad.json`);\n        div.click();\n    })(windows, positions, titles, codeEditors, windowTypes, save);\n\n    const _loader = (() => {\n        const input = document.createElement(\"div\");\n        input.innerHTML = `<input id=\"imageinput\" type=\"file\" accept=\"application/json\">`;\n        const imageInput = input.firstChild;\n\n        imageInput.onchange = () => {\n            const file = imageInput.files[0];\n            if (!file) {imageInput.remove(); return;}\n            new Promise(resolve => {\n                let reader = new FileReader();\n                reader.onload = () => resolve(reader.result);\n                reader.readAsArrayBuffer(file);\n            }).then((data) => {\n                const result = new TextDecoder(\"utf-8\").decode(data);\n                const loaded = parse(result);\n                if (loaded.version === 1) {\n                    Events.send(loadRequest, loaded);\n                }\n                imageInput.remove();\n            });\n            imageInput.value = \"\";\n        };\n        imageInput.oncancel = () => imageInput.remove();\n        document.body.appendChild(imageInput);\n        imageInput.click();\n    })(load);\n"],["6","    const css = `\nhtml, body, #renkon {\n    overflow: hidden;\n}\n\n#pad {\n    width: 100%;\n    height: 0px;\n    position: absolute;\n    top: 30px;\n    left: 0px;\n}\n\n.owner {\n    width: 100%;\n    height: 100%;\n}\n\n.editor {\n    height: calc(100% - 24px);\n    border-radius: 0px 0px 6px 6px;\n}\n\n#overlay {\n    pointer-events: none;\n    height: 100%;\n    width: 100%;\n    position: absolute;\n    top: 30px;\n    left: 0px;\n}\n\n.window {\n    position: absolute;\n    background-color: #eee;\n    border-radius: 6px;\n    box-shadow: inset 0 2px 2px 0 rgba(255, 255, 255, 0.8), 1px 1px 8px 0 rgba(0, 35, 46, 0.2);\n}\n\n#buttonBox {\n    display: flex;\n    left: 0px;\n    top: 0px;\n    width: 100%;\n    padding-bottom: 4px;\n    border-bottom: 1px solid black;\n    margin-bottom: 8px;\n    margin-top: 8px;\n}\n\n.spacer {\n    flex-grow: 1;\n}\n\n.menuButton {\n    margin-left: 4px;\n    margin-right: 4px;\n    border-radius: 4px;\n}\n\t\t   \n\n.runnerIframe {\n    width: 100%;\n    height: calc(100% - 24px);\n    border-radius: 0px 0px 6px 6px;\n    border: 2px solid black;\n    box-sizing: border-box;\n    border-radius: 0px 0px 6px 6px;\n    background-color: #fff;\n    user-select: none;\n}\n\n.titleBar {\n    background-color: #bbb;\n    pointer-events: none;\n    width: 100%;\n    height: 24px;\n    display: flex;\n    border: 2px ridge #ccc;\n    box-sizing: border-box;\n    border-radius: 6px 6px 0px 0px;\n}\n\n.title {\n    pointer-events: none;\n    margin-left: 20px;\n    flex-grow: 1;\n    margin-right: 20px;\n    padding-left: 10px;\n    pointer-events: none;\n    user-select: none;\n}\n\n.title[contentEditable=\"true\"] {\n    background-color: #eee;\n    pointer-events: all;\n}\n\n.titlebarButton {\n    height: 20px;\n    width: 20px;\n    margin: 2px;\n    margin-top: 1px;\n    pointer-events: all;\n    border-radius: 8px;\n}\n\n.titlebarButton:hover {\n    background-color: #eee;\n}\n\n.closeButton {\n    background-image: url(\"data:image/svg+xml,%3Csvg%20id%3D%22Layer_1%22%20data-name%3D%22Layer%201%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cpath%20d%3D%22M8.48%2C12.25C6.4%2C10.17%2C4.37%2C8.16%2C2.35%2C6.15c-.34-.34-.68-.69-1-1.05a2.34%2C2.34%2C0%2C0%2C1%2C.17-3.26%2C2.3%2C2.3%2C0%2C0%2C1%2C3.25-.09C7%2C3.93%2C9.23%2C6.14%2C11.45%2C8.34a5.83%2C5.83%2C0%2C0%2C1%2C.43.58c.36-.4.62-.71.9-1%2C2-2%2C4.12-4%2C6.12-6.08a2.51%2C2.51%2C0%2C0%2C1%2C3.41%2C0%2C2.37%2C2.37%2C0%2C0%2C1%2C0%2C3.43c-2.18%2C2.22-4.39%2C4.41-6.58%2C6.62-.11.1-.21.22-.34.35l.44.48L22.09%2C19A2.7%2C2.7%2C0%2C0%2C1%2C23%2C20.56a2.49%2C2.49%2C0%2C0%2C1-1.29%2C2.54A2.36%2C2.36%2C0%2C0%2C1%2C19%2C22.69c-2-2-4-4-6.06-6-.33-.33-.62-.68-1-1.12-1.63%2C1.66-3.17%2C3.25-4.73%2C4.82-.79.8-1.6%2C1.59-2.42%2C2.36a2.32%2C2.32%2C0%2C0%2C1-3.21-.1%2C2.3%2C2.3%2C0%2C0%2C1-.19-3.25c2.14-2.2%2C4.31-4.36%2C6.48-6.54Z%22%20fill%3D%22%234D4D4D%22%2F%3E%3C%2Fsvg%3E\");\n}\n\n.editButton {\n    background-image: url(\"data:image/svg+xml,%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%3Csvg%20width%3D%2224px%22%20height%3D%2224px%22%20viewBox%3D%220%200%2024%2024%22%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20xmlns%3Axlink%3D%22http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%22%3E%3C!--%20Generator%3A%20Sketch%2064%20(93537)%20-%20https%3A%2F%2Fsketch.com%20--%3E%3Ctitle%3Eicon%2Fmaterial%2Fedit%3C%2Ftitle%3E%3Cdesc%3ECreated%20with%20Sketch.%3C%2Fdesc%3E%3Cg%20id%3D%22icon%2Fmaterial%2Fedit%22%20stroke%3D%22none%22%20stroke-width%3D%221%22%20fill%3D%22none%22%20fill-rule%3D%22evenodd%22%3E%3Cg%20id%3D%22ic-round-edit%22%3E%3Cg%20id%3D%22Icon%22%20fill%3D%22%234D4D4D%22%3E%3Cpath%20d%3D%22M3%2C17.46%20L3%2C20.5%20C3%2C20.78%203.22%2C21%203.5%2C21%20L6.54%2C21%20C6.67%2C21%206.8%2C20.95%206.89%2C20.85%20L17.81%2C9.94%20L14.06%2C6.19%20L3.15%2C17.1%20C3.05%2C17.2%203%2C17.32%203%2C17.46%20Z%20M20.71%2C7.04%20C20.8972281%2C6.85315541%2021.002444%2C6.59950947%2021.002444%2C6.335%20C21.002444%2C6.07049053%2020.8972281%2C5.81684459%2020.71%2C5.63%20L18.37%2C3.29%20C18.1831554%2C3.10277191%2017.9295095%2C2.99755597%2017.665%2C2.99755597%20C17.4004905%2C2.99755597%2017.1468446%2C3.10277191%2016.96%2C3.29%20L15.13%2C5.12%20L18.88%2C8.87%20L20.71%2C7.04%20Z%22%20id%3D%22Icon-Shape%22%3E%3C%2Fpath%3E%3C%2Fg%3E%3Crect%20id%3D%22ViewBox%22%20fill-rule%3D%22nonzero%22%20x%3D%220%22%20y%3D%220%22%20width%3D%2224%22%20height%3D%2224%22%3E%3C%2Frect%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E\");\n}\n\n.runButton {\n    background-image: url(\"data:image/svg+xml,%3Csvg%20id%3D%22Layer_1%22%20data-name%3D%22Layer%201%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%2024%2024%22%3E%3Cpath%20d%3D%22M12.32%2C19.94c-2.36-.11-4.67-.17-7-.34-1.91-.14-2.65-.91-2.89-2.91a29.26%2C29.26%2C0%2C0%2C1%2C.09-8.2A2.63%2C2.63%2C0%2C0%2C1%2C5.11%2C6.11%2C102.77%2C102.77%2C0%2C0%2C1%2C18.59%2C6a8.52%2C8.52%2C0%2C0%2C1%2C1.12.12C21.15%2C6.38%2C21.88%2C7.2%2C22.1%2C9A29.32%2C29.32%2C0%2C0%2C1%2C22%2C17.19a2.58%2C2.58%2C0%2C0%2C1-2.59%2C2.4C17%2C19.73%2C14.66%2C19.82%2C12.32%2C19.94Zm-2.06-4.05%2C5.29-3-5.29-3Z%22%20fill%3D%22%234D4D4D%22%2F%3E%3C%2Fsvg%3E\");\n    display: none;\n    pointer-events: none;\n}\n\n.runButton[type=\"runner\"] {\n    display: inherit;\n    pointer-events: all;\n}\n\n.resizeHandler {\n    position: absolute;\n    background-color: rgba(0.1, 0.1, 0.1, 0.1);\n    width: 20px;\n    height: 20px;\n    bottom: -10px;\n    right: -10px;\n    border-radius: 6px;\n}\n\n.resizeHandler:hover {\n    background-color: rgba(0.1, 0.4, 0.1, 0.3);\n}\n`;\n\n    ((css) => {\n        const renkon = document.querySelector(\"#renkon\");\n        const style = document.createElement(\"style\");\n        style.id = \"pad-css\";\n        style.textContent = css;\n        renkon.querySelector(\"#pad-css\")?.remove();\n        renkon.appendChild(style);\n    })(css);\n"]]},"positions":{"map":{"__map":true,"values":[["1",{"height":477.11328125,"id":"1","width":486.390625,"x":30,"y":60}],["2",{"height":218.66796875,"id":"2","width":518.58984375,"x":478.58203125,"y":61.953125}],["3",{"height":271.09375,"id":"3","width":516.10546875,"x":681.16796875,"y":372.484375}],["4",{"height":263.50390625,"id":"4","width":395.42578125,"x":830.69921875,"y":732.98828125}],["5",{"height":200,"id":"5","width":300,"x":932.2109375,"y":163.1796875}],["6",{"height":278.953125,"id":"6","width":480.88671875,"x":453.1953125,"y":807.65625}]]}},"titles":{"map":{"__map":true,"values":[["1",{"id":"1","state":false,"title":"Initialization"}],["2",{"id":"2","state":false,"title":"Data Structure"}],["3",{"id":"3","state":false,"title":"User Interaction"}],["4",{"id":"4","state":false,"title":"Rendering"}],["5",{"id":"5","state":false,"title":"Save and Load"}],["6",{"id":"6","state":false,"title":"untitled"}]]}},"version":1,"windowTypes":{"map":{"__map":true,"values":[["1","code"],["2","code"],["3","code"],["4","code"],["5","code"],["6","code"]]}},"windows":["1","2","3","4","5","6"]}